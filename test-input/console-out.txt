MESSAGE: MAIN
MESSAGE: Build Augmented Grammar
MESSAGE: Build Grammar
ATTRIBUTE -START- : NTerminal('S'')
ATTRIBUTE -END- : Terminal('#')
ATTRIBUTE -NT- : {"S'": NTerminal('S''), 'E': NTerminal('E'), 'T': NTerminal('T'), 'F': NTerminal('F')}
ATTRIBUTE -T- : {'+': Terminal('+'), '*': Terminal('*'), '(': Terminal('('), ')': Terminal(')'), 'i': Terminal('i'), '#': Terminal('#')}
ATTRIBUTE -START_PROD- : Production('S'->E')
MESSAGE: PARSE BEGIN
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->T
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->T*F
MESSAGE: REDUCE
prod: E->E+T
MESSAGE: ACCEPT
MESSAGE: PARSE BEGIN
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->T
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->E+T
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->(E)
MESSAGE: REDUCE
prod: T->F
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->T*F
MESSAGE: REDUCE
prod: E->T
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->E+T
MESSAGE: ACCEPT
MESSAGE: PARSE BEGIN
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->T
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->E+T
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->(E)
MESSAGE: REDUCE
prod: T->F
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->T*F
MESSAGE: REDUCE
prod: E->T
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->(E)
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->T
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->E+T
MESSAGE: ACCEPT
MESSAGE: PARSE BEGIN
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->T
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->T
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->E+T
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->(E)
MESSAGE: REDUCE
prod: T->T*F
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: REDUCE
prod: E->T
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->F
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->i
MESSAGE: REDUCE
prod: T->T*F
MESSAGE: REDUCE
prod: E->E+T
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: F->(E)
MESSAGE: REDUCE
prod: T->T*F
MESSAGE: REDUCE
prod: E->E+T
MESSAGE: ACCEPT
Passed 4 test.

E:\Document\PY\cl>python parse-LR1.py grammar2.txt grammar2-test.txt
MESSAGE: MAIN
MESSAGE: Build Augmented Grammar
MESSAGE: Build Grammar
ATTRIBUTE -START- : NTerminal('S')
ATTRIBUTE -END- : Terminal('#')
ATTRIBUTE -NT- : {'S': NTerminal('S'), '<RE>': NTerminal('<RE>'), '<union>': NTerminal('<union>'), '<simple-RE>': NTerminal('<simple-RE>'), '<concatenation>': N
Terminal('<concatenation>'), '<basic-RE>': NTerminal('<basic-RE>'), '<star>': NTerminal('<star>'), '<elementary-RE>': NTerminal('<elementary-RE>'), '<group>': N
Terminal('<group>'), '<any>': NTerminal('<any>'), '<eos>': NTerminal('<eos>'), '<char>': NTerminal('<char>'), '<set>': NTerminal('<set>'), '<positive-set>': NTe
rminal('<positive-set>'), '<set-items>': NTerminal('<set-items>'), '<set-item>': NTerminal('<set-item>'), '<range>': NTerminal('<range>'), '<negative-set>': NTe
rminal('<negative-set>'), '<plus>': NTerminal('<plus>')}
ATTRIBUTE -T- : {'|': Terminal('|'), '(': Terminal('('), ')': Terminal(')'), '.': Terminal('.'), '$': Terminal('$'), 'a': Terminal('a'), 'b': Terminal('b'), '1'
: Terminal('1'), '2': Terminal('2'), '[': Terminal('['), '-': Terminal('-'), ']': Terminal(']'), '^': Terminal('^'), '*': Terminal('*'), '+': Terminal('+'), '#'
: Terminal('#')}
ATTRIBUTE -START_PROD- : Production('S-><RE>')
MESSAGE: PARSE BEGIN
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->a
MESSAGE: REDUCE
prod: <elementary-RE>-><char>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><basic-RE>
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->1
MESSAGE: REDUCE
prod: <elementary-RE>-><char>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><basic-RE>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->a
MESSAGE: REDUCE
prod: <elementary-RE>-><char>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <concatenation>-><simple-RE><basic-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><concatenation>
MESSAGE: REDUCE
prod: <RE>-><simple-RE>
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->2
MESSAGE: REDUCE
prod: <elementary-RE>-><char>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><basic-RE>
MESSAGE: REDUCE
prod: <union>-><RE>|<simple-RE>
MESSAGE: REDUCE
prod: <RE>-><union>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <group>->(<RE>)
MESSAGE: REDUCE
prod: <elementary-RE>-><group>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <plus>-><elementary-RE>+
MESSAGE: REDUCE
prod: <basic-RE>-><plus>
MESSAGE: REDUCE
prod: <concatenation>-><simple-RE><basic-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><concatenation>
MESSAGE: REDUCE
prod: <RE>-><simple-RE>
MESSAGE: ACCEPT
MESSAGE: PARSE BEGIN
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->a
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->b
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: REDUCE
prod: <set-items>-><set-item>
MESSAGE: REDUCE
prod: <set-items>-><set-item><set-items>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <positive-set>->[<set-items>]
MESSAGE: REDUCE
prod: <set>-><positive-set>
MESSAGE: REDUCE
prod: <elementary-RE>-><set>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><basic-RE>
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->a
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->b
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: REDUCE
prod: <set-items>-><set-item>
MESSAGE: REDUCE
prod: <set-items>-><set-item><set-items>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <positive-set>->[<set-items>]
MESSAGE: REDUCE
prod: <set>-><positive-set>
MESSAGE: REDUCE
prod: <elementary-RE>-><set>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><basic-RE>
MESSAGE: REDUCE
prod: <RE>-><simple-RE>
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->1
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->2
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: REDUCE
prod: <set-items>-><set-item>
MESSAGE: REDUCE
prod: <set-items>-><set-item><set-items>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <positive-set>->[<set-items>]
MESSAGE: REDUCE
prod: <set>-><positive-set>
MESSAGE: REDUCE
prod: <elementary-RE>-><set>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><basic-RE>
MESSAGE: REDUCE
prod: <union>-><RE>|<simple-RE>
MESSAGE: REDUCE
prod: <RE>-><union>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <group>->(<RE>)
MESSAGE: REDUCE
prod: <elementary-RE>-><group>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <star>-><elementary-RE>*
MESSAGE: REDUCE
prod: <basic-RE>-><star>
MESSAGE: REDUCE
prod: <concatenation>-><simple-RE><basic-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><concatenation>
MESSAGE: REDUCE
prod: <RE>-><simple-RE>
MESSAGE: ACCEPT
MESSAGE: PARSE BEGIN
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->1
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->2
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->a
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->b
MESSAGE: REDUCE
prod: <set-item>-><char>
MESSAGE: REDUCE
prod: <set-items>-><set-item>
MESSAGE: REDUCE
prod: <set-items>-><set-item><set-items>
MESSAGE: REDUCE
prod: <set-items>-><set-item><set-items>
MESSAGE: REDUCE
prod: <set-items>-><set-item><set-items>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <positive-set>->[<set-items>]
MESSAGE: REDUCE
prod: <set>-><positive-set>
MESSAGE: REDUCE
prod: <elementary-RE>-><set>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><basic-RE>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->a
MESSAGE: REDUCE
prod: <elementary-RE>-><char>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <plus>-><elementary-RE>+
MESSAGE: REDUCE
prod: <basic-RE>-><plus>
MESSAGE: REDUCE
prod: <concatenation>-><simple-RE><basic-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><concatenation>
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->a
MESSAGE: REDUCE
prod: <elementary-RE>-><char>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><basic-RE>
MESSAGE: REDUCE
prod: <RE>-><simple-RE>
MESSAGE: SHIFT
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <char>->b
MESSAGE: REDUCE
prod: <elementary-RE>-><char>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><basic-RE>
MESSAGE: REDUCE
prod: <union>-><RE>|<simple-RE>
MESSAGE: REDUCE
prod: <RE>-><union>
MESSAGE: SHIFT
MESSAGE: REDUCE
prod: <group>->(<RE>)
MESSAGE: REDUCE
prod: <elementary-RE>-><group>
MESSAGE: REDUCE
prod: <basic-RE>-><elementary-RE>
MESSAGE: REDUCE
prod: <concatenation>-><simple-RE><basic-RE>
MESSAGE: REDUCE
prod: <simple-RE>-><concatenation>
MESSAGE: REDUCE
prod: <RE>-><simple-RE>
MESSAGE: ACCEPT
Passed 3 test.
